---
title: "Reproducible Science and Figures Assignment"
format: html
embed-resources: true
editor: visual
---

### Data preparation:

```{r, message=FALSE}
library(tidyverse)
library(palmerpenguins)
library(janitor)
library(here)
library(ggplot2)
library(rstatix)
library(ggpubr)
library(ragg)
library(svglite)

source(here("functions", "cleaning.R"))
```

Loading the data:

```{r}
write.csv(penguins_raw, here("data", "penguins_raw.csv"))
```

Cleaning the data:

```{r}
penguins_clean <- penguins_raw %>%
  clean_column_names() %>%
  remove_columns(c("comments", "delta")) %>%
  shorten_species() %>%
  remove_empty_columns_rows()
```

Saving the cleaned data:

```{r}
write_csv(penguins_clean, here("data", "penguins_clean.csv"))
```

### Question 1: Data Visualisation for Science Communication

#### 1.1 Misleading figure:

```{r, message=FALSE}
body_mass_vs_flipper_length <- penguins_clean %>% 
  select(species, body_mass_g, flipper_length_mm) %>%
  remove_NA()

bm_vs_fl_scatterplot <- ggplot(data = body_mass_vs_flipper_length,
       aes(x = body_mass_g, y = flipper_length_mm)) +
  geom_point(aes(colour = species, fill = species), alpha = 0.25) +
  geom_smooth(aes(colour = species), method = "lm", se = FALSE) + # adding lines of best fit
  scale_x_continuous(limits = (c(2000,7000))) + # manually changing x axis scale
  scale_y_continuous(limits = (c(100,300))) + # manually changing y axis scale
  theme(legend.title = element_blank()) # removal of legend title

bm_vs_fl_scatterplot
```

1.1.1 Saving vectored figure

```{r, results="hide, warning=FALSE"}
ggsave(here("figures", "bm_vs_fl_vector.svg"),
       plot = bm_vs_fl_scatterplot,
       device = svglite,
       width = 20,
       height = 20,
       scaling = 2)

```

#### 1.2 Write about how your design choices mislead the reader about the underlying data (100-300 words)

All the data on this graph is correct, however, the design choices mean that the data is presented extremely poorly. The axis labels are not in a readable format as they have been left in the "snake case" format used in the data table. The axis ranges are unnecessarily large which masks the true distribution of the underlying data as the points are too close together. The legend has no title and it is unclear what the three categorical variables mean. Furthermore, the colours of three species makes it difficult to tell which data point belongs to which species, and makes it particularly difficult for colour blind people. Combining this with the high point transparency and the grey background it makes the distribution very difficult to discern. Finally, the lines or best fit for each species are not particularly clear and are not shown with any p-values or confidence intervals from the linear models.

### Question 2: Data Pipeline

#### 2.1 Introduction

The Palmer Penguins dataset contains information about 3 different penguin species (Adelie, Chinstrap, and Gentoo) which inhabit 3 islands (Biscoe, Dream, and Torgersen) of the Palmer Archipelago in Antarctica. The dataset contains information about individual penguins, including their species and the island they are found on. It also includes phenotypic information like sex, morphological measurements, and reproductive information. I will be exploring this dataset for results of statistical significance.

#### 2.2 Hypothesis

Before making any hypothesis, it is vital to explore the raw data to look for any patterns of particular biological interest:

Exploratory figure to investigate culmen length:

```{r}
culmen_length <- penguins_clean %>%
  select(species, culmen_length_mm) %>% # selecting required variables
  remove_NA()

# removing NA values from culmen length column
```

```{r}
species_colours <- c("Adelie" = "darkorange",
                     "Chinstrap" = "purple",
                     "Gentoo" = "cyan4")
# matching species with the colours of the dataset

exploring_culmen_length <- ggplot(
  data = penguins_clean %>% 
    select(species, culmen_length_mm, sex) %>% 
    remove_NA(),
  aes(x = species,
      y = culmen_length_mm)) +
  geom_violin(
    aes(colour = species, fill = species),
    draw_quantiles = c(0.25, 0.5, 0.75), # addition of medians and quartiles
    alpha = 0.2,
    trim = FALSE) +
  coord_flip() +
  geom_jitter(position = position_jitter(0.2, seed = 0), # set seed for reproducibility
              shape = 21,
              color = "black",
              fill = "white",
              size = 0.5) +
  scale_color_manual(values = species_colours) +
  scale_fill_manual(values = species_colours) +
  facet_grid(rows = vars(sex)) + # grouping plots by sex
  labs(x = "Species", y = "Culmen Length (mm)") +
  theme_bw()

exploring_culmen_length
```

::: {.callout-note icon="false"}
## Hypotheses

Looking at the data on **culmen length**, it would be interesting to determine whether **different species** have significant differences.

**Null hypothesis** - No difference in culmen length between species

**Alternative hypothesis** - There is a significant difference in culmen length between species
:::

#### 2.3 Statistical methods

2.3.1 Shapiro-Wilk test for normality

```{r}
shapiro_test <- shapiro.test(culmen_length$culmen_length_mm)

shapiro_test
```

The null hypothesis of the Shapiro-Wilk test is the data is drawn from a normally distributed population. As **p \< 0.05**, there is sufficient evidence to reject the null hypothesis and so culmen length is **not normally distributed**.

This can be visualised using a qqplot:

```{r}
qqnorm(culmen_length$culmen_length_mm)
qqline(culmen_length$culmen_length_mm, col = "red")
```

2.3.2 Kruskal-Wallis test

As culmen length is not normally distributed, a non-parametric method is required to test differences between species. The **Kruskal-Wallis** test determines whether there are significant differences between the medians of two or more groups. It requires a numerical response variable (culmen length) and a categorical explanatory variable (species).

```{r}
kruskal <- kruskal.test(data = culmen_length, culmen_length_mm ~ species)

kruskal
```

The null hypothesis of the Kruskal-Wallis test is that the medians are the same across all groups. As **p \< 0.05**, there is sufficient evidence to reject the null hypothesis and so at least one species has a different median culmen length.

2.3.3 Dunn test

Now it is has been established that at least one species has a significantly different median culmen length, pairwise interactions can be measured to determine how the culmen length individual species differ from each other. One such post-hoc test suitable for non-parametric data is the Dunn test.

```{r}
stats_dunn <- dunn_test(data = culmen_length, culmen_length_mm ~ species, p.adjust.method = "bonferroni")

stats_dunn_cleaned <- stats_dunn %>% 
  select(-n1, -n2, -statistic, -p)

stats_dunn_cleaned
```

Using the Dunn test, each pairwise comparison is its own hypothesis test. For each pair, the null hypothesis is that there is no difference between the medians. Multiple simultaneous hypothesis tests require a p-value adjustment to reduce Type I error - in this case the Bonferroni correction is used.

#### 2.4 Results & Discussion

```{r}
stats_dunn_annotation <- stats_dunn %>% 
    add_xy_position(x = "species") # annotating graph with results from Dunn test

culmen_length_violinplot <- ggplot(
  data = penguins_clean %>% drop_na(),
  aes(x = species,
      y = culmen_length_mm)) +
  geom_violin(
    aes(colour = species, fill = species),
    draw_quantiles = c(0.25, 0.5, 0.75),
    alpha = 0.2,
    trim = FALSE) +
  geom_dotplot(binaxis = "y", binwidth = 0.4, stackdir = "center", color = "black", fill = "white") +
  scale_color_manual(values = species_colours) +
  scale_fill_manual(values = species_colours) +
  stat_pvalue_manual(stats_dunn_annotation, hide.ns = FALSE) +
  theme_classic() +
  labs(x = "Species", y = "Culmen Length (mm)")
  

culmen_length_violinplot
```

This results figure clearly shows the pairwise comparisons and their significance from the Dunn test. Adelie penguins and Chinstrap penguins have a significantly different culmen lengths, as do Adelie compared with Gentoo. This is shown by the very small p-values represented by '\*\*\*\*'. There is also no significant difference between culmen lengths of Chinstrap compared to Gentoo penguins.

#### 2.5 Conclusion

We can conclude from the statistical analysis that culmen length differs among the three species, and specifically that there is difference between Adelie penguins compared with both Chinstrap and Gentoo. More research is required to determine the biological significance of this, as it may be due to scaling with body size or the different beak lengths could be a specific selective advantage.

### Question 3: Open Science

#### 3.1 GitHub link

<https://github.com/dusty-saxophone/Reproducible-Science-and-Figures-Assignment>

#### 3.2 Partner's GitHub link

<https://github.com/arabidopsis8/ReproducibleScienceAndFigures>

#### 3.3 Reflection on partner's code

The data pipeline was very clearly written with a clear narrative throughout. This was achieved through the use of appropriate headings, figure descriptions, and concise text which described why each decision was made. This was particularly helpful during explanations of why particular statistical tests were used, for example testing for normality and homogeneity of variance as requirements for analysis of variance (ANOVA). Furthermore, it also helped to explain the results of the statistical tests which are often displayed in an unclear data tibble. It was also beneficial to callout the packages used for a particular statistical test. The figures used were clear with appropriate axis labels, scales, and formatting â€“ I particularly liked that the colour scheme matched the Palmer Penguins dataset.

For the most part the code ran very well, with the exception of renv::snapshot interfering with the running and a warning message displaying that a particular syntax could only be used with an old version of ggplot2.

To make the code more reproducible it would be a good idea to include statistical tests to measure normality (e.g. Shapiro-Wilkes) and homogeneity of variance as it is currently reliant on graphical solutions based on the objective judgement of the viewer. In addition, setting a seed for the jitter plots would also ensure that the same graph is produced each time. To make the code more understandable, the cleaning function should be removed from the main code and simply be called as it is already present in a separate functions file. I also think that including the significance score on the graphs too would make for clearer and faster data interpretation.

I think it would be quite easy to alter the figures in this data pipeline. The code is clearly explained using text and is structured logically. The code is split into appropriate blocks and variables do not appear to be overwritten. The use of a cleaning function is also useful if required in a different context. Perhaps more annotation could be used to describe what a particular line of code is doing if it is not commonly used/is highly specific to the project.

#### 3.4 Reflection on my code

The only improvement suggested for my code was include the renv::restore function. This is good advice as it ensures that the person who cloned the GitHub repository has access the all the packages used when the code was written. After viewing my partnerâ€™s code, I also think it would be useful to highlight where each package is being used in my code.

My main takeaway from this practical is knowledge that scientists must take a great deal of care to ensure the reproducibility of their work. Reproducibility is an essential pillar of science to ensure that reported results are valid, knowledge is furthered, and public trust in science is maintained. Open science (ensuring that all materials used during research are available to everyone) is extremely important for reproducibility as it increases the likelihood of reproducibility studies being carried out. As coding is now an essential aspect of many scientific studies, open science principles should be extended to all code written and used during such studies. This includes uploading code to open access repositories and adding links to repositories to papers. It is also important to ensure that all code contained in repositories is easy to reproduce by others. For example, ensuring code is accompanied by explanatory text which highlights why coding choices were made and where/why particular packages were used. It is also important that the coding environment is saved to ensure that others have access to the correct versions of packages used in the code (using `renv` function). Furthermore, including non-specific file paths by setting the working directory to the current location (using `here` package) is also important to ensure code works properly on another personâ€™s computer. In addition, code should be well annotated to ensure that modifications can easily be made, and code can be reused under different circumstances.
